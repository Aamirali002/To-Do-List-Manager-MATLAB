function TodoListGUI()
    % Create the main figure
    fig = figure('Name', 'To-Do List Manager', ...
                 'MenuBar', 'none', ...
                 'Toolbar', 'none', ...
                 'Position', [100, 100, 600, 650], ...
                 'NumberTitle', 'off', ...
                 'Color', [0.95 0.95 0.97]);

    % Initialize tasks storage
    tasks = {};
    status = [];
    times = {};

    % Title Label
    uicontrol('Parent', fig, ...
              'Style', 'text', ...
              'String', 'To-Do List Manager', ...
              'FontSize', 20, ...
              'FontWeight', 'bold', ...
              'ForegroundColor', [0.2 0.4 0.6], ...
              'Position', [150, 580, 300, 40], ...
              'BackgroundColor', [0.95 0.95 0.97], ...
              'HorizontalAlignment', 'center');

    % New Task Input Label
    uicontrol('Parent', fig, ...
              'Style', 'text', ...
              'String', 'New Task:', ...
              'FontSize', 12, ...
              'FontWeight', 'bold', ...
              'Position', [50, 520, 100, 30], ...
              'ForegroundColor', [0.2 0.4 0.6], ...
              'BackgroundColor', [0.95 0.95 0.97], ...
              'HorizontalAlignment', 'left');

    % New Task Input
    uicontrol('Parent', fig, ...
              'Style', 'edit', ...
              'Tag', 'txtNewTask', ...
              'Position', [150, 520, 300, 30], ...
              'HorizontalAlignment', 'left', ...
              'BackgroundColor', [0.9 0.9 0.9]);

    % Time Required Dropdown Label
    uicontrol('Parent', fig, ...
              'Style', 'text', ...
              'String', 'Specify Time?', ...
              'FontSize', 10, ...
              'FontWeight', 'bold', ...
              'Position', [50, 470, 100, 30], ...
              'ForegroundColor', [0.2 0.4 0.6], ...
              'BackgroundColor', [0.95 0.95 0.97], ...
              'HorizontalAlignment', 'left');

    % Time Required Dropdown
    timeDropdown = uicontrol('Parent', fig, ...
                             'Style', 'popupmenu', ...
                             'Tag', 'timeDropdown', ...
                             'String', {'No', 'Yes'}, ...
                             'Position', [150, 470, 100, 30], ...
                             'BackgroundColor', [0.9 0.9 0.9]);

    % Time Input Label
    uicontrol('Parent', fig, ...
              'Style', 'text', ...
              'String', 'Completion Time:', ...
              'FontSize', 10, ...
              'FontWeight', 'bold', ...
              'Position', [270, 470, 120, 30], ...
              'ForegroundColor', [0.2 0.4 0.6], ...
              'BackgroundColor', [0.95 0.95 0.97], ...
              'HorizontalAlignment', 'left');

    % Time Input
    timeInput = uicontrol('Parent', fig, ...
                          'Style', 'edit', ...
                          'Tag', 'txtTime', ...
                          'Position', [400, 470, 150, 30], ...
                          'HorizontalAlignment', 'left', ...
                          'BackgroundColor', [0.9 0.9 0.9], ...
                          'Enable', 'off');

    % Add Task Button
    uicontrol('Parent', fig, ...
              'Style', 'pushbutton', ...
              'String', 'Add Task', ...
              'Position', [470, 520, 80, 30], ...
              'BackgroundColor', [0.3 0.7 0.4], ...
              'ForegroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @addTask);

    % Horizontal Line Separator
    uicontrol('Parent', fig, ...
              'Style', 'text', ...
              'Position', [50, 460, 500, 2], ...
              'BackgroundColor', [0.8 0.8 0.8]);

    % Tasks Listbox
    hListbox = uicontrol('Parent', fig, ...
                         'Style', 'listbox', ...
                         'Tag', 'lstTasks', ...
                         'Position', [50, 180, 500, 280], ...
                         'String', 'No tasks found', ...
                         'BackgroundColor', [0.9 0.9 0.9], ...
                         'Max', 2, ...
                         'Value', 1);

    % Mark Completed Button
    uicontrol('Parent', fig, ...
              'Style', 'pushbutton', ...
              'String', 'Mark Completed', ...
              'Position', [50, 120, 140, 40], ...
              'BackgroundColor', [0.1 0.6 0.8], ...
              'ForegroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @markCompleted);

    % Remove Task Button
    uicontrol('Parent', fig, ...
              'Style', 'pushbutton', ...
              'String', 'Remove Task', ...
              'Position', [210, 120, 140, 40], ...
              'BackgroundColor', [0.8 0.3 0.3], ...
              'ForegroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @removeTask);

    % Clear All Button
    uicontrol('Parent', fig, ...
              'Style', 'pushbutton', ...
              'String', 'Clear All', ...
              'Position', [370, 120, 140, 40], ...
              'BackgroundColor', [0.5 0.5 0.5], ...
              'ForegroundColor', 'white', ...
              'FontWeight', 'bold', ...
              'Callback', @clearAllTasks);

    % Dropdown Time Enable/Disable Function
    set(timeDropdown, 'Callback', @toggleTimeInput);

    function toggleTimeInput(~, ~)
        dropdownValue = get(timeDropdown, 'Value');
        if dropdownValue == 2
            set(timeInput, 'Enable', 'on');
        else
            set(timeInput, 'Enable', 'off', 'String', '');
        end
    end

    function addTask(~, ~)
        newTaskInput = findobj(fig, 'Tag', 'txtNewTask');
        newTask = get(newTaskInput, 'String');
        timeRequired = get(timeInput, 'String');
        dropdownValue = get(timeDropdown, 'Value');

        if ~isempty(newTask)
            tasks{end+1} = newTask;
            status(end+1) = 0;
            if dropdownValue == 2
                times{end+1} = timeRequired;
            else
                times{end+1} = 'Not Specified';
            end
            set(newTaskInput, 'String', '');
            set(timeInput, 'String', '', 'Enable', 'off');
            set(timeDropdown, 'Value', 1);
            updateTaskList();
            msgbox('Task added successfully!', 'Success', 'help');
        else
            errordlg('Task cannot be empty', 'Error');
        end
    end

    function updateTaskList()
        if isempty(tasks)
            set(hListbox, 'String', 'No tasks found', 'Value', 1);
        else
            taskStrings = cell(length(tasks), 1);
            for i = 1:length(tasks)
                statusText = '⏳ Pending';
                if status(i) == 1
                    statusText = '✅ Completed';
                end
                taskStrings{i} = sprintf('%d. [%s] %s (Time: %s)', i, statusText, tasks{i}, times{i});
            end
            set(hListbox, 'String', taskStrings, 'Value', 1);
        end
    end

    function markCompleted(~, ~)
        selected = get(hListbox, 'Value');
        for i = selected
            status(i) = 1;
        end
        updateTaskList();
    end

    function removeTask(~, ~)
        selected = get(hListbox, 'Value');
        tasks(selected) = [];
        status(selected) = [];
        times(selected) = [];
        updateTaskList();
    end

    function clearAllTasks(~, ~)
        tasks = {};
        status = [];
        times = {};
        updateTaskList();
    end
end